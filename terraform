# Define AWS provider configuration
provider "aws" {
  region = "us-east-1" # Change this to desired AWS region
}

# Create a VPC
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
}

# Create a public subnet within the VPC
resource "aws_subnet" "public_subnet" {
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = "10.0.1.0/24" # Change this CIDR block as needed
  availability_zone       = "us-east-1a" # Change to your desired AZ
  map_public_ip_on_launch = true
}

# Create a private subnet within the VPC
resource "aws_subnet" "private_subnet" {
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = "10.0.2.0/24" # Change this CIDR block as needed
  availability_zone       = "us-east-1b" # Change to your desired AZ
}

# Create a security group for the EC2 instance
resource "aws_security_group" "my_security_group" {
  name        = "my-security-group"
  description = "My Security Group"

  # Inbound rule for SSH (port 22)
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  # Outbound rule allowing all traffic
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  vpc_id = aws_vpc.my_vpc.id
}

# Create an EC2 instance in the public subnet
resource "aws_instance" "my_instance" {
  ami           = "ami-0c55b159cbfafe1f0" # Amazon Linux 2 AMI (change as needed)
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.public_subnet.id
  key_name      = "your-key-name" # Change to your EC2 key pair name
  associate_public_ip_address = true

  # Attach the security group
  security_groups = [aws_security_group.my_security_group.name]

  # Define the root block device with an 8GB gp2 volume
  root_block_device {
    volume_size = 8
    volume_type = "gp2"
  }

  tags = {
    "purpose" = "Assignment"
  }
}
